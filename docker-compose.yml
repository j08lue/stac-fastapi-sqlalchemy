version: '3'
services:
  stac-fastapi:
    container_name: stac-fastapi
    image: stac-utils/stac-fastapi
    build:
      context: .
      dockerfile: Dockerfile
    platform: linux/amd64
    environment:
      - APP_HOST=0.0.0.0
      - APP_PORT=8081
      - RELOAD=true
      - ENVIRONMENT=local
      - POSTGRES_USER=username
      - POSTGRES_PASS=password
      - POSTGRES_DBNAME=postgis
      - POSTGRES_HOST_READER=database
      - POSTGRES_HOST_WRITER=database
      - POSTGRES_PORT=5432
      - WEB_CONCURRENCY=10
    ports:
      - "8081:8081"
    volumes:
      - ./stac_fastapi:/app/stac_fastapi
      - ./scripts:/app/scripts
    depends_on:
      - database
    command:
      bash -c "./scripts/wait-for-it.sh database:5432 && python -m stac_fastapi.sqlalchemy.app"

  database:
    container_name: postgres
    image: ghcr.io/stac-utils/pgstac:v0.6.6
    environment:
      - POSTGRES_USER=username
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgis
      - PGUSER=username
      - PGPASSWORD=password
      - PGHOST=localhost
      - PGDATABASE=postgis
    ports:
      - "5439:5432"
    command: postgres -N 500

  # Load joplin demo dataset into the SQLAlchemy Application
  load-joplin:
    image: stac-utils/stac-fastapi
    environment:
      - ENVIRONMENT=development
      - POSTGRES_USER=username
      - POSTGRES_PASS=password
      - POSTGRES_DBNAME=postgis
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
    volumes:
      - ./stac_fastapi:/app/stac_fastapi
      - ./scripts:/app/scripts
    command: >
      bash -c "./scripts/wait-for-it.sh stac-fastapi:8081 && alembic upgrade head && python /app/scripts/ingest_joplin.py http://stac-fastapi:8081"
    depends_on:
      - database
      - stac-fastapi

networks:
  default:
    name: stac-fastapi-network
